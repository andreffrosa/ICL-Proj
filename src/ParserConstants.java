/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LET = 6;
  /** RegularExpression Id. */
  int IN = 7;
  /** RegularExpression Id. */
  int END = 8;
  /** RegularExpression Id. */
  int FUN = 9;
  /** RegularExpression Id. */
  int R_ARROW = 10;
  /** RegularExpression Id. */
  int COMMA = 11;
  /** RegularExpression Id. */
  int D_EQ = 12;
  /** RegularExpression Id. */
  int EQ = 13;
  /** RegularExpression Id. */
  int ATTRIB = 14;
  /** RegularExpression Id. */
  int NEW = 15;
  /** RegularExpression Id. */
  int DERREF = 16;
  /** RegularExpression Id. */
  int N_EQ = 17;
  /** RegularExpression Id. */
  int Bool = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int THEN = 20;
  /** RegularExpression Id. */
  int ELSE = 21;
  /** RegularExpression Id. */
  int WHILE = 22;
  /** RegularExpression Id. */
  int DO = 23;
  /** RegularExpression Id. */
  int FOR = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int AND = 26;
  /** RegularExpression Id. */
  int OR = 27;
  /** RegularExpression Id. */
  int GREATER_EQ = 28;
  /** RegularExpression Id. */
  int LOWER_EQ = 29;
  /** RegularExpression Id. */
  int LOWER = 30;
  /** RegularExpression Id. */
  int GREATER = 31;
  /** RegularExpression Id. */
  int D_DOTS = 32;
  /** RegularExpression Id. */
  int ID = 33;
  /** RegularExpression Id. */
  int Num = 34;
  /** RegularExpression Id. */
  int PLUS = 35;
  /** RegularExpression Id. */
  int MINUS = 36;
  /** RegularExpression Id. */
  int TIMES = 37;
  /** RegularExpression Id. */
  int DIV = 38;
  /** RegularExpression Id. */
  int MOD = 39;
  /** RegularExpression Id. */
  int LPAR = 40;
  /** RegularExpression Id. */
  int RPAR = 41;
  /** RegularExpression Id. */
  int SEMI_COLON = 42;
  /** RegularExpression Id. */
  int EL = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"let\"",
    "\"in\"",
    "\"end\"",
    "\"fun\"",
    "<R_ARROW>",
    "\",\"",
    "\"==\"",
    "\"=\"",
    "\":=\"",
    "\"new\"",
    "\"!\"",
    "\"!=\"",
    "<Bool>",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"for\"",
    "\"~\"",
    "\"&&\"",
    "\"||\"",
    "\">=\"",
    "\"<=\"",
    "\"<\"",
    "\">\"",
    "\":\"",
    "<ID>",
    "<Num>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\";;\"",
  };

}
